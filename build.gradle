group 'labas.labas.labas'
version '0.1.0'

subprojects {
    apply plugin: 'idea'
    apply plugin: 'java'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    repositories {
        mavenCentral()
    }

    dependencies {
        compile 'org.slf4j:slf4j-api:1.7.13'
        compile 'org.slf4j:slf4j-simple:1.7.13'

        testCompile 'junit:junit:4.12'
        testCompile 'org.springframework:spring-test:4.2.4.RELEASE'
        testCompile 'org.hamcrest:hamcrest-all:1.3'
        testCompile 'com.h2database:h2:1.4.191'
    }

    sourceSets {
        integrationTest {
            java {
                compileClasspath += main.output + test.output
                runtimeClasspath += main.output + test.output
                srcDir file('src/integrationTest/java')
            }
            resources.srcDir file('src/integrationTest/resources')
        }
    }

    idea {
        module {
            // Show integration test source directory in IntelliJ IDEA
            testSourceDirs += file('src/integrationTest/java')
            scopes.TEST.plus += [ configurations.integrationTestCompile ]
        }
    }

    tasks.withType(Test) {
        // Add default Spring profile for all tests
        systemProperty "spring.profiles.active", "test"
        // Print to console all the test which were started, passed, failed or were skipped
        testLogging {
            events 'started', 'passed', 'failed', 'skipped'
        }
    }

    task testJar(type: Jar, dependsOn: testClasses) {
        baseName = "test-${project.archivesBaseName}"
        from sourceSets.test.output
    }

    configurations {
        tests

        integrationTestCompile.extendsFrom testCompile
        integrationTestRuntime.extendsFrom testRuntime
    }

    artifacts {
        tests testJar
    }

    task integrationTests(type: Test) {
        testClassesDir = sourceSets.integrationTest.output.classesDir
        classpath = sourceSets.integrationTest.runtimeClasspath
    }

    check.dependsOn integrationTests
    integrationTests.mustRunAfter test
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.4.1'
}